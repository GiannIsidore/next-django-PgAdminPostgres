# Generated by Django 5.1.2 on 2024-11-06 10:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('bio', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'author',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('membership_date', models.DateField(auto_now_add=True)),
                ('membership_status', models.CharField(choices=[('Active', 'Active'), ('Suspended', 'Suspended')], default='Active', max_length=20)),
            ],
            options={
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
            ],
            options={
                'db_table': 'publisher',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('publication_year', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=50)),
                ('summary', models.TextField(blank=True)),
                ('authors', models.ManyToManyField(related_name='books', to='api.author')),
                ('genres', models.ManyToManyField(related_name='books', to='api.genre')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.publisher')),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_number', models.CharField(max_length=50, unique=True)),
                ('current_status', models.CharField(choices=[('Available', 'Available'), ('On Loan', 'On Loan'), ('Reserved', 'Reserved'), ('Lost', 'Lost')], default='Available', max_length=20)),
                ('condition_status', models.CharField(choices=[('Good', 'Good'), ('Damaged', 'Damaged'), ('Needs Repair', 'Needs Repair'), ('Lost', 'Lost')], default='Good', max_length=20)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='copies', to='api.book')),
            ],
            options={
                'db_table': 'book_copy',
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('On Loan', 'On Loan'), ('Returned', 'Returned'), ('Overdue', 'Overdue')], default='On Loan', max_length=20)),
                ('copy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='api.bookcopy')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='api.member')),
            ],
            options={
                'db_table': 'loan',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_date', models.DateField(auto_now_add=True)),
                ('reservation_status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('copy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.bookcopy')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.member')),
            ],
            options={
                'db_table': 'reservation',
            },
        ),
    ]
